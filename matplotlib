#Using twin axes
fig, ax=plt.subplots()
ax.plt(climate_change.index, climate_change['co2']
ax.set_xlabel('Time')
ax.set_ylabel('  co2', color='blue')
ax.tick_params('y', colors='blue')    #change the ticks color to blue too
ax2=ax.twinx()       #Same x
ax2.plot(climate_change.index, climate_change['relative_temp'], color='red')
ax2.set_ylabel('Relative temperature (C)', color='red')
ax2.ticks_params('y', colors='red')
plt.show()

#use date as index
climate_change = pd.read_csv('climate_change.csv', parse_dates=True, index_col='date')

#A function that plots time-series
def plot_timeseries(axes, x,y, color, xlabel, ylabel):
axes.plot(x, y, color=color)
axes.set_xlabel(xlabel)
axes.set_ylabel(ylabel, color=color)
axes.tick_params('y', colors=color)

#Two y-axis plots with function
fig,ax=plt.subplots()
plot_timeseries(ax, climate_change.index, climate_change['co2'], 'blue', 'time', 'co2')
ax2=ax.twinx()
plot_timeseries(ax, ....)
plt.show()

#### Annotation
fig, ax = plt.subplots()
# Plot the relative temperature data
ax.plot(climate_change.index, climate_change['relative_temp'])
# Annotate the date at which temperatures exceeded 1 degree
ax.annotate('>1 degree', xy=((pd.Timestamp('2015-10-06'), 1))) #xy is position of point, (optional)xytext is position of text'>1 degree'
#annotation with style.
ax.annotate(">1 degree", xytext=((pd.Timestamp('2008-10-06'), -0.2)), xy=((pd.Timestamp('2015-10-06'), 1)), arrowprops=dict(arrowstyle='->', color='gray'))
